#!/bin/sh

printf "\033[1;32;48mSTARTING EUDAQ, %s \033[0m \n" "$(date)"

# set the host IP of RunControl PC
#export HOSTIP=192.168.21.1 # local network of DATURA telescope in DESY TB21
#export HOSTIP=192.168.22.1 # local network of DURANTA telescope in DESY TB22
export HOSTIP=192.168.22.1
export HOSTNAME=192.168.22.1
printf "\033[22;31m\t Check and maybe adjust: Host IP of RunControl is set to %s \033[0m \n" "$HOSTIP"

# set the port by default or as first argument
export RCPORT=44000
[ "$1" != "" ] && RCPORT=$1

cd `dirname $0`

# killing old processes
printf '\033[22;33m\t Cleaning up first...  \033[0m \n'
sh KILLRUN.local
sleep 1

######################################################################
#printf '\033[22;33m\t Making sure all data files are properly writeprotected \033[0m \n'
#chmod a=rw data/run*.raw
#printf '\033[22;32m\t ...Done!\033[0m \n'

cd ../../bin

######################################################################
#=====================================================================
printf '\033[1;32;48mStarting Subprocesses \033[0m \n'
#=====================================================================

######################################################################
# euRun
###############
printf '\033[22;33m\t Run Control \033[0m \n'
xterm -sb -sl 1000 -geom 80x10-480-900 -fn fixed -T "Run Control" -e './euRun.exe -x 0 -y 0 -w 650 -g 550 -a tcp://$RCPORT' &
sleep 2

######################################################################
# euLog
###############
printf '\033[22;33m\t Log Collector  \033[0m \n'
xterm -sb -sl 1000 -geom 80x10-480-900 -fn fixed -T "Log Collector" -e './euLog.exe -x 0 -y 550 -w 1500 -g 450 -r tcp://$HOSTIP:44000' &
sleep 2

######################################################################
# DataCollector
###############
printf '\033[22;33m\t Data Collector \033[0m \n'
xterm -sb -sl 1000 -geom 80x10-480-900 -fn fixed -T "Data Collector" -e './euDataCollector.exe -r tcp://$HOSTIP:$RCPORT' &
sleep 2

######################################################################
# NI Producer
###############
if [ -f "NiProducer.exe" ]
then
    printf '\033[22;33m\t NiProducer for linux  \033[0m \n'
    xterm -sb -sl 1000 -geom 80x10-480-700 -T 'Ni Producer for Linux' -e './NiProducer.exe -r tcp://$HOSTIP:$RCPORT' &
    sleep 2
else
    printf '\033[22;31m\t NiProducer for linux not found!  \033[0m \n'
    echo 'Configure EUDAQ with the CMake option "-D BUILD_ni=ON" and re-run "make install" to install.'
fi

######################################################################
# TLU producer
###############
if [ -f "TLUProducer.exe" ]
then
    printf '\033[22;33m\t Making sure TLU is accessible  \033[0m \n'
    ./tlunoroot.exe
    sleep 1
    printf '\033[22;33m\t TLUProducer  \033[0m \n'
    xterm -sb -sl 1000 -geom 80x10-480-500 -T 'TLU Producer' -e './TLUProducer.exe -r tcp://$HOSTIP:$RCPORT' &
    sleep 2
else
    printf '\033[22;31m\t TLUProducer not found! \033[0m \n'
    echo 'Configure EUDAQ with the CMake option "-D BUILD_tlu=ON" and re-run "make install" to install.'
fi

printf '\033[22;31m\t Or please start the NiProducer and the TLUProducer on the NI crate! \033[0m \n'

#####################################################################
######################################################################
# Online Monitor
###############
#if [ -f "OnlineMon.exe" ]
#then
#    printf '\033[22;33m\t Online Monitor  \033[0m \n'
#    xterm -sb -sl 1000 -geom 80x10-480-900 -fn fixed -T "Run Control" -e './OnlineMon.exe  -sc 10 -s 0 -tc 0 -r tcp://$HOSTIP:$RCPORT' &
#    sleep 1
#else
#    printf '\033[22;31m\t Online monitor not found! \033[0m \n'
#    echo 'Configure EUDAQ with the CMake option "-D BUILD_onlinemon=ON" and re-run "make install" to install.'
#fi
#####################################################################

printf '\033[1;32;48m...Done!\033[0m \n'
printf '\033[1;32;48mSTART OF DAQ COMPLETE\033[0m \n'
